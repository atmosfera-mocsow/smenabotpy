import time
import random
import openai
import telebot
from telebot import types
from telebot.types import InputMediaPhoto
import datetime
from dotenv import load_dotenv
import os

load_dotenv()


print('Starting smena_bot!')

token = os.getenv('TG_TOKEN')
bot = telebot.TeleBot(token)
openai.api_key = os.getenv('OPENAI_TOKEN')

chat_otchet = "" # –ü—Ä–æ–ø–∏—Å–∞—Ç—å ID —á–∞—Ç–∞ –∫—É–ª—å—Ç–æ—Ä–≥–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–æ–≤. –û–±—Ä–∞—Ç–∏—Ç—å –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ!
debug_logs = "" # –ü—Ä–æ–ø–∏—Å–∞—Ç—å ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–π ID –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –≤—ã—à–µ.

plan_for_the_day = ""
TIME_plan_for_the_day = ""
hobby_one = ""
TIME_hobby_one = ""
hobby_two = ""
hobby_three = ""
dining_room = ""
TIME_dining_room = ""
phone_book = ""
rating = ""
TIME_rating = ""

pod = types.InlineKeyboardMarkup()
pod.row(types.InlineKeyboardButton('–ü—Ä–∏–Ω—è—Ç—å', callback_data='pood'))

play = types.InlineKeyboardMarkup()
play.row(types.InlineKeyboardButton('–î—É—à–µ–≤–Ω–∞—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_17'), (types.InlineKeyboardButton('–£—Ç—Ä–µ–Ω–Ω—è—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_16')), (types.InlineKeyboardButton('–¢–∞–Ω—Ü—É—é—â–∞—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_15')))
play.row(types.InlineKeyboardButton('–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_14'), (types.InlineKeyboardButton('–í–ª—é–±–ª—ë–Ω–Ω–∞—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_12')), (types.InlineKeyboardButton('–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_11')))
play.row(types.InlineKeyboardButton('–ö–æ—Å–º–æ—Å FM', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-158297736_2'), (types.InlineKeyboardButton('–ú–µ—á—Ç–∞—Ç–µ–ª—å–Ω–∞—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_9')), (types.InlineKeyboardButton('–ó–∏–º–Ω—è—è', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_8')))
play.row(types.InlineKeyboardButton('–ù–æ–≤–æ–≥–æ–¥–Ω–µ–µ', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_6'), (types.InlineKeyboardButton('–í–æ–∂–∞—Ç—Å–∫–∏–µ', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_7')), (types.InlineKeyboardButton('–ê—Ç–º–æ–∫–∞—Å—Ç', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_5')))
play.row(types.InlineKeyboardButton('–ó–∞—Ä—è–¥–∫–∏', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_4'), (types.InlineKeyboardButton('–°–≤–µ—á–∫–∏', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_3')), (types.InlineKeyboardButton('–ù–∞—à–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', url='https://vk.com/audios-401713?section=playlists&z=audio_playlist-401713_2')))

useful = types.InlineKeyboardMarkup()
useful.row(types.InlineKeyboardButton('–ò–≥—Ä–æ—Ç–µ–∫–∞', url="https://drive.google.com/drive/folders/1i45-GR1HBY7WfMNiOZZgTiWbufLtMZW1"))
useful.row(types.InlineKeyboardButton('–°–≤–µ—á–∫–∏', url="https://drive.google.com/drive/folders/1LTKLUcH_9CP1oGkRiYcP6v1d7Ir6Ay_p"))
useful.row(types.InlineKeyboardButton('–û—Ç—Ä—è–¥–∫–∏', url="https://drive.google.com/drive/folders/1EJNDOqGIDsqy0sCf3NZVAT6C_8dxrIm9"))

access_denied = types.InlineKeyboardMarkup()
access_denied.row(types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –∑–∞–Ω–æ–≤–æ', callback_data='re-enter_the_password'))

sure_phone_book = types.InlineKeyboardMarkup()
sure_phone_book.row(types.InlineKeyboardButton('–£–≤–µ—Ä–µ–Ω, —Ö–æ—á—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç', callback_data='yes'))
sure_phone_book.row(types.InlineKeyboardButton('–ù–µ—Ç, —Å–æ—Ä—Ä–∏, –≤–µ—Ä–Ω–∏—Ç–µ –º–µ–Ω—è –≤ –º–µ–Ω—é', callback_data='no'))

sure_p = types.InlineKeyboardMarkup()
sure_p.row(types.InlineKeyboardButton('–£–≤–µ—Ä–µ–Ω, —Ö–æ—á—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∞–π–∫ –∏–ª–∏ –¥–∏–∑–ª–∞–π–∫', callback_data='yes_l'))
sure_p.row(types.InlineKeyboardButton('–ù–µ—Ç, —Å–æ—Ä—Ä–∏, –≤–µ—Ä–Ω–∏—Ç–µ –º–µ–Ω—è –≤ –º–µ–Ω—é', callback_data='no'))

how_play = types.InlineKeyboardMarkup()
how_play.row(types.InlineKeyboardButton('–ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã', callback_data='game_por'), types.InlineKeyboardButton('–ü–µ—Ä–≤–∏—á–Ω–∞—è —Ç–∞–∫—Ç–∏–ª–∫–∞', callback_data='game_pertak'))
how_play.row(types.InlineKeyboardButton('–í—Ç–æ—Ä–∏—á–Ω–∞—è —Ç–∞–∫—Ç–∏–ª–∫–∞', callback_data='game_vtortak'), types.InlineKeyboardButton('–ü–µ—Ä–≤–∏—á–Ω–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ', callback_data='perv_znakomstvo'))
how_play.row(types.InlineKeyboardButton('–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞', callback_data='zakrep_znak'), types.InlineKeyboardButton('–†–æ–∑—ã–≥—Ä—ã—à–∏', callback_data='rozgr'))
how_play.row(types.InlineKeyboardButton('–í—ã—è–≤–ª–µ–Ω–∏–µ –ª–∏–¥–µ—Ä–∞', callback_data='lider'), types.InlineKeyboardButton('–ú–∏–∫—Å–µ—Ä—ã', callback_data='mikser'))
how_play.row(types.InlineKeyboardButton('–°–µ–∫—Å', callback_data='seks'))

menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
btn1 = types.KeyboardButton("–ü–ª–∞–Ω –¥–Ω—è üìÉ")
btn2 = types.KeyboardButton("–ö—Ä—É–∂–∫–∏ üîî")
btn3 = types.KeyboardButton("–ú–µ–Ω—é üçΩ")
btn4 = types.KeyboardButton("–®—Ç–∞—Ç–∫–∞ üë§")
btn5 = types.KeyboardButton("–û—Ç—á—ë—Ç üñ•")
btn6 = types.KeyboardButton("–†–µ–π—Ç–∏–Ω–≥ üìä")
btn7 = types.KeyboardButton("Music üîä")
btn8 = types.KeyboardButton("–ü–æ–ª–µ–∑–Ω–æ üõë")
btn9 = types.KeyboardButton("ChatGPT")
btn10 = types.KeyboardButton("üëç or üëé")
btn11 = types.KeyboardButton("–ò–≥—Ä—ã ü¶¥")
menu.add(btn1, btn2, btn3)
menu.add(btn4, btn5, btn6)
menu.add(btn7, btn8)
menu.add(btn10, btn9, btn11)

admin = types.ReplyKeyboardMarkup(resize_keyboard=True)
bt1 = types.KeyboardButton("–æ–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω –¥–Ω—è")
bt2 = types.KeyboardButton("–æ–±–Ω–æ–≤–∏—Ç—å –∫—Ä—É–∂–∫–∏")
bt3 = types.KeyboardButton("–æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é")
bt4 = types.KeyboardButton("–æ–±–Ω–æ–≤–∏—Ç—å —à—Ç–∞—Ç–∫—É")
bt5 = types.KeyboardButton("–æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥")
bt6 = types.KeyboardButton("–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
admin.add(bt1)
admin.add(bt2)
admin.add(bt3)
admin.add(bt4)
admin.add(bt5)
admin.add(bt6)

photo = types.ReplyKeyboardMarkup(resize_keyboard=True)
bb1 = types.KeyboardButton("–æ–¥–Ω–æ —Ñ–æ—Ç–æ")
bb2 = types.KeyboardButton("–¥–≤–∞ —Ñ–æ—Ç–æ")
bb3 = types.KeyboardButton("—Ç—Ä–∏ —Ñ–æ—Ç–æ")
photo.add(bb1)
photo.add(bb2)
photo.add(bb3)


@bot.message_handler(commands=['start'])
def start(message):
    TO_CHAT_ID = 736959096
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! \n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏ "
                                           "–≤–∫: vk.com/v_mango_d\n—Ç–≥: @DanilkovvD".format(message.from_user))
    time.sleep(0.5)
    bot.send_message(message.chat.id, text="–ù–∞–∂–∏–º–∞—è –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –Ω–µ –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—Å—ã–ª–∫—É –∏–ª–∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∑–≤–æ–ª—è—é—â—É—é –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º", reply_markup=pod)


@bot.message_handler(commands=['ad'])
def start(message):
    bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=admin)


def password(message):
    password = message.text
    try:
        if password.lower() == "—è –ª—é–±–ª—é —Å–≤–æ–∏—Ö –¥–µ—Ç–µ–π":
            bot.send_message(message.chat.id, text="–î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω", reply_markup=menu)
            TO_CHAT_ID = 736959096
            bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
        else:
            bot.send_message(message.chat.id, text="–ü–∞—Ä–æ–ª—å –æ—Ç–ª–∏—á–µ–Ω –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ", reply_markup=access_denied)
    except Exception as e:
        bot.send_message(message.chat.id, text="–í –¥–æ—Å—Ç—É–ø–µ –æ—Ç–∫–∞–∑–∞–Ω–æ\n\nLOGS: {" + e + "}")


def update_the_plan_for_the_day(message):
    global TIME_plan_for_the_day
    TIME_plan_for_the_day = datetime.datetime.now()
    global plan_for_the_day
    TO_CHAT_ID = 736959096
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    plan_for_the_day = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–ü–ª–∞–Ω –¥–Ω—è –¥–æ–±–∞–≤–ª–µ–Ω")


def chatgp(message):
    TO_CHAT_ID = 736959096
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    bot.reply_to(message, "–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞, –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥—É–º–∞–µ—Ç")
    response = openai.Completion.create(
        model="text-davinci-003",
        prompt=message.text,
        temperature=0.9,
        max_tokens=1500,
        top_p=1,
        frequency_penalty=0.0,
        presence_penalty=0.6,
        stop=[" Human:", " AI:"]
    )
    msg = bot.send_message(message.chat.id, text=response['choices'][0]['text'], reply_markup=menu)


def one_photo(message):
    global TIME_hobby_one
    TIME_hobby_one = datetime.datetime.now()
    global hobby_one
    global hobby_two
    global hobby_three
    hobby_two = ""
    hobby_three = ""
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    hobby_one = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–ö—Ä—É–∂–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")


def two_photo(message):
    global hobby_one
    global TIME_hobby_one
    TIME_hobby_one = datetime.datetime.now()
    global hobby_three
    hobby_three = ""
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    hobby_one = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    message = bot.reply_to(message, "–ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –ü—Ä–∏—à–ª–∏ –º–Ω–µ –≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ")
    bot.register_next_step_handler(message, two_photo_step_two)


def two_photo_step_two(message):
    global hobby_two
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    hobby_two = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–í—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ö—Ä—É–∂–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã")


def three_photo(message):
    global hobby_one
    global TIME_hobby_one
    TIME_hobby_one = datetime.datetime.now()
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    hobby_one = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    message = bot.reply_to(message, "–ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –ü—Ä–∏—à–ª–∏ –º–Ω–µ –≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ")
    bot.register_next_step_handler(message, three_photo_step_two)


def three_photo_step_two(message):
    global hobby_two
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    hobby_two = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–í—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ç—Ä–µ—Ç—å–µ —Ñ–æ—Ç–æ")
    bot.register_next_step_handler(message, three_photo_step_three)


def three_photo_step_three(message):
    global hobby_three
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    hobby_three = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–ö—Ä—É–∂–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")


def add_dining_room(message):
    global dining_room
    global TIME_dining_room
    TIME_dining_room = datetime.datetime.now()
    a = 1
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'downoload/' + message.photo[1].file_id + str(a) + '.jpg'
    dining_room = src
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "–ù–æ–≤–æ–µ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–æ")

def add_phone_book(message):
    global phone_book
    phone_book = message.text
    bot.reply_to(message, "–®—Ç–∞—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")


def send_a_report(message):
    TO_CHAT_ID = -1001828048973
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    message = bot.send_message(message.chat.id, text='–û—Ç—á—ë—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω‚úÖ', reply_markup=menu)

def add_rating(message):
    global rating
    global TIME_rating
    TIME_rating = datetime.datetime.now()
    rating = message.text
    bot.reply_to(message, "–†–µ–π—Ç–∏–Ω–≥ –¥–æ–±–∞–≤–ª–µ–Ω")

def obratka(message):
    TO_CHAT_ID = -1001828048973
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    message = bot.send_message(message.chat.id, text='–£—Å–ø–µ—à–Ω–æ‚úÖ', reply_markup=menu)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        bot.send_message(message.chat.id, text='–•–æ—Ä–æ—à–æ, –≤–æ—Ç –º–µ–Ω—é', reply_markup=menu)

    elif message.text == "–º–µ–Ω—é üíº":
        bot.send_message(message.chat.id, text='–•–æ—Ä–æ—à–æ, –≤–æ—Ç –º–µ–Ω—é', reply_markup=menu)

    elif message.text == "–æ–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω –¥–Ω—è":
        message = bot.send_message(message.chat.id, text='–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', reply_markup=menu)
        bot.register_next_step_handler(message, update_the_plan_for_the_day)

    elif message.text == "–ü–ª–∞–Ω –¥–Ω—è üìÉ":
        print(TIME_plan_for_the_day)
        bot.send_message(message.chat.id, text='–ü–ª–∞–Ω –¥–Ω—è –æ–±–Ω–æ–≤–ª—ë–Ω:\n' + str(TIME_plan_for_the_day))
        bot.send_photo(message.chat.id, open(plan_for_the_day, 'rb'), reply_markup=menu)

    elif message.text == "–æ–±–Ω–æ–≤–∏—Ç—å –∫—Ä—É–∂–∫–∏":
        bot.send_message(message.chat.id, text='–°–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ —Ç—ã —Ö–æ—à–µ—á—å –∑–∞–≥—Ä—É–∑–∏—Ç—å?', reply_markup=photo)

    elif message.text == "–æ–¥–Ω–æ —Ñ–æ—Ç–æ":
        bot.send_message(message.chat.id, text='–•–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ', reply_markup=menu)
        bot.register_next_step_handler(message, one_photo)

    elif message.text == "–¥–≤–∞ —Ñ–æ—Ç–æ":
        bot.send_message(message.chat.id, text='–•–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ü–ï–†–í–û–ï —Ñ–æ—Ç–æ, –∑–∞—Ç–µ–º —è –ü–û–ü–†–û–®–£ –í–¢–û–†–û–ï', reply_markup=menu)
        bot.register_next_step_handler(message, two_photo)
    
    elif message.text == "—Ç—Ä–∏ —Ñ–æ—Ç–æ":
        bot.send_message(message.chat.id, text='–•–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ü–ï–†–í–û–ï —Ñ–æ—Ç–æ, –∑–∞—Ç–µ–º —è –ü–û–ü–†–û–®–£ –û–°–¢–ê–õ–¨–ù–´–ï', reply_markup=menu)
        bot.register_next_step_handler(message, three_photo)

    elif message.text == "–ö—Ä—É–∂–∫–∏ üîî":
        bot.send_message(message.chat.id, text='–ö—Ä—É–∂–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:\n' + str(TIME_hobby_one))
        f1 = open(hobby_one, "rb")
        if hobby_three != "":
            f2 = open(hobby_two, "rb")
            f3 = open(hobby_three, "rb")
            bot.send_media_group(message.chat.id, [InputMediaPhoto(f1), InputMediaPhoto(f2), InputMediaPhoto(f3)])
        else:
            if hobby_two != "":

                f2 = open(hobby_two, "rb")
                bot.send_media_group(message.chat.id, [InputMediaPhoto(f1), InputMediaPhoto(f2)])
            else:
                bot.send_photo(message.chat.id, f1, reply_markup=menu)

    elif message.text == "–æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é":
        message = bot.send_message(message.chat.id, text='–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –º–µ–Ω—é', reply_markup=menu)
        bot.register_next_step_handler(message, add_dining_room)

    elif message.text == "–ú–µ–Ω—é üçΩ":
        bot.send_message(message.chat.id, text='–ú–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ:\n' + str(TIME_dining_room))
        bot.send_photo(message.chat.id, open(dining_room, 'rb'), reply_markup=menu)

    elif message.text == "–æ–±–Ω–æ–≤–∏—Ç—å —à—Ç–∞—Ç–∫—É":
        message = bot.send_message(message.chat.id, text='–ü—Ä–∏—à–ª–∏ –º–Ω–µ —à—Ç–∞—Ç–∫—É (–¢–µ–∫—Å—Ç)', reply_markup=menu)
        bot.register_next_step_handler(message, add_phone_book)

    elif message.text == "–®—Ç–∞—Ç–∫–∞ üë§":
        bot.send_message(message.chat.id, text=phone_book, reply_markup=menu)

    elif message.text == "–û—Ç—á—ë—Ç üñ•":
        bot.send_message(message.chat.id, text='–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç?', reply_markup=sure_phone_book)

    elif message.text == "üëç or üëé":
        bot.send_message(message.chat.id, text='–ï—Å–ª–∏ —Ç–µ–±–µ –µ—Å—Ç—å –∫–æ–º—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –∏–ª–∏ –¥–∏–∑–ª–∞–π–∫, —Ç—ã –≤—ã–±—Ä–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É–Ω–∫—Ç', reply_markup=sure_p)

    elif message.text == "–æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥":
        message = bot.send_message(message.chat.id, text='–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ä–µ–π—Ç–∏–Ω–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:'
                                                         '\n–ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ xx.xx.xxxx\n1 –æ—Ç—Ä—è–¥ - xx –±–∞–ª–ª–æ–≤'
                                                         '\n2 –æ—Ç—Ä—è–¥ - xx –±–∞–ª–ª–æ–≤', reply_markup=menu)
        bot.register_next_step_handler(message, add_rating)

    elif message.text == "–†–µ–π—Ç–∏–Ω–≥ üìä":
        bot.send_message(message.chat.id, text='–†–µ–π—Ç–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω:\n' + str(TIME_rating))
        bot.send_message(message.chat.id, text=rating)

    elif message.text == "Music üîä":
        bot.send_message(message.chat.id, text="–î–µ—Ä–∂–∏ –Ω–∞—à–∏ –ø–ª–µ–π–ª–∏—Å—Ç—ã", reply_markup=play)

    elif message.text == "–ü–æ–ª–µ–∑–Ω–æ üõë":
        bot.send_message(message.chat.id, text="–î–µ—Ä–∂–∏", reply_markup=useful)
    
    elif message.text == "ChatGPT":
        message = bot.send_message(message.chat.id, text='–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å', reply_markup=menu)
        bot.register_next_step_handler(message, chatgp)

    elif message.text == "–ò–≥—Ä—ã ü¶¥":
        message = bot.send_message(message.chat.id, text='–í—ã–±–∏—Ä–∞–π –±–ª–æ–∫', reply_markup=how_play)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    if call.data == "re-enter_the_password":
        message = bot.send_message(call.message.chat.id, text='–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:')
        bot.register_next_step_handler(message, password)

    elif call.data == "yes":
        message = bot.send_message(call.message.chat.id, text='–ü—Ä–∏—à–ª–∏ –º–Ω–µ –æ—Ç—á—ë—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\n –§–û–†–ú–ê–¢ –°–û–û–ë–©–ï–ù–ò–Ø:\n–ú–∞–∫—Å–∏–º—É–º 1 —Ñ–æ—Ç–æ\n–ù–æ–º–µ—Ä –æ—Ç—Ä—è–¥–∞')
        bot.register_next_step_handler(message, send_a_report)

    elif call.data == "no":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç –º–µ–Ω—é', reply_markup=menu)
    
    elif call.data == "yes_l":
        message = bot.send_message(call.message.chat.id, text='–û–∫–µ–π! –ù–∞–ø–∏—à–∏ –∫–æ–º—É —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –∏–ª–∏ –¥–∏–∑–∞–π–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n\nxx.xx.xxxx\n–õ–∞–π–∫ xxxx –∑–∞')
        bot.register_next_step_handler(message, obratka)

    elif call.data == "game_pertak":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        new_line = random.choice(open('pervtakt.txt').readlines())
        bot.send_message(call.message.chat.id, text=new_line, reply_markup=menu)

    elif call.data == "game_vtortak":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('vtortakt.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)

    elif call.data == "perv_znakomstvo":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('pervznak.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)

    elif call.data == "zakrep_znak":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('zakrepzn.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)
    
    elif call.data == "rozgr":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('rozgr.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)
    
    elif call.data == "lider":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('lider.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)
    
    elif call.data == "mikser":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('mikser.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)
    
    elif call.data == "seks":
        bot.send_message(call.message.chat.id, text='–æ–∫–µ–π, –≤–æ—Ç —Ç–µ–±–µ –∏–≥—Ä–∞')
        line = random.choice(open('seks.txt').readlines())
        bot.send_message(call.message.chat.id, text=str(line), reply_markup=menu)

    elif call.data == "pood":
            message = bot.send_message(call.message.chat.id, text='–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:')
            bot.register_next_step_handler(message, password)
    
    elif call.data == "game_por":
        bot.send_message(call.message.chat.id, text="1. –ó–∞–≥–æ–Ω/–ª–µ–≥–µ–Ω–¥–∞\n2. –ù–∞–∑–≤–∞–Ω–∏–µ\n3. –¶–µ–ª—å\n4. –ü—Ä–∞–≤–∏–ª–∞\n5. –¢–ë\n6. –í—Å—ë –ª–∏ –ø–æ–Ω—è—Ç–Ω–æ?\n7. –£–ö–í\n8. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ", reply_markup=menu)


bot.infinity_polling()